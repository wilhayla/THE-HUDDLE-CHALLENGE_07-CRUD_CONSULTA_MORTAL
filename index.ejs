<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Temas y Votos</title>
    <!-- Incluye Tailwind CSS a través de CDN -->
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f0f4f8;
        }
    </style>
</head>
<body class="bg-gray-100 p-8">
    <div class="container mx-auto max-w-2xl bg-white rounded-xl shadow-lg p-6">
        <h1 class="text-3xl font-bold text-gray-800 mb-6 text-center">Crear Nuevo Tema</h1>
        
        <!-- Formulario para crear usuario y tema -->
        <form action="/temas" method="POST" class="space-y-4">
            <div>
                <label for="uuid" class="block text-sm font-medium text-gray-700">ID de Usuario (UUID):</label>
                <input type="text" id="uuid" name="UUID" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 p-2 border">
            </div>
            <div>
                <label for="titulo_tema" class="block text-sm font-medium text-gray-700">Título del Tema:</label>
                <input type="text" id="titulo_tema" name="titulo_tema" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 p-2 border">
            </div>
            <button type="submit" class="w-full py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition duration-150 ease-in-out">
                Crear Tema
            </button>
        </form>

        <hr class="my-8">

        <h2 class="text-2xl font-bold text-gray-800 mb-4 text-center">Temas Existentes</h2>
        
        <!-- Campo para ingresar el UUID para votar y error message -->
        <div class="mb-4">
            <label for="voter_uuid" class="block text-sm font-medium text-gray-700">Tu UUID para votar:</label>
            <input type="text" id="voter_uuid" name="voter_uuid" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 p-2 border" placeholder="Ingresa tu UUID para votar">
            <p id="uuid-error-message" class="text-sm text-red-500 mt-1 hidden">Por favor, ingresa tu UUID para votar.</p>
        </div>

        <% if (temas && temas.length > 0) { %> <!-- Si el array de temas existe y tiene elementos el codigo que sigue se ejecuta-->
            <ul class="space-y-4">
                <% temas.forEach(tema => { %> <!-- Itera sobre cada tema del array-->
                    <li class="bg-gray-50 rounded-lg p-4 shadow-sm flex flex-col transition-transform duration-200 hover:scale-[1.01]">
                        <div class="flex items-center justify-between">
                            <div>
                                <span class="text-lg font-medium text-gray-900"><%= tema.titulo_tema %></span>
                            </div>
                            <div class="flex items-center space-x-2">
                                <span class="text-xl font-bold text-indigo-600"><%= tema.voto_tema %></span>
                                <span class="text-sm text-gray-500">votos</span>

                                <!-- Botón de Voto para votar temas -->
                                <button onclick="votarTema('<%= tema.id_tema %>')" class="py-1 px-2 text-white bg-green-500 hover:bg-green-600 rounded-md text-xs font-medium">
                                    Votar
                                </button>

                                <!-- FBotón de Eliminar para eliminar temas -->
                                <button onclick="eliminarTema('<%= tema.id_tema %>')" class="py-1 px-2 text-white bg-red-500 hover:bg-red-600 rounded-md text-xs font-medium">
                                    Eliminar
                                </button>

                                <!-- Botón de Edición para editar temas -->
                                <button class="py-1 px-2 text-white bg-blue-500 hover:bg-blue-600 rounded-md text-xs font-medium" 
                                    onclick="document.getElementById('edit-form-<%= tema.id_tema %>').classList.toggle('hidden')">
                                    Editar
                                </button>
                            </div>
                        </div>

                        <!-- Formulario de Edición (Inicialmente oculto) -->
                        <div id="edit-form-<%= tema.id_tema %>" class="bg-gray-100 p-4 rounded-lg hidden mt-4">
                            <form onsubmit="event.preventDefault(); editarTema(this, '<%= tema.id_tema %>');" class="space-y-2">
                                <input type="text" name="nuevo_titulo" value="<%= tema.titulo_tema %>" required class="w-full p-2 border rounded-md">
                                <button type="submit" class="w-full py-2 px-4 text-white bg-green-500 hover:bg-green-600 rounded-md text-sm">
                                    Guardar
                                </button>
                            </form>
                        </div>
                        
                        <!-- Sección de Enlaces -->
                        <div class="mt-4">
                            <button class="text-sm font-medium text-indigo-600 hover:underline"
                                onclick="document.getElementById('enlaces-section-<%= tema.id_tema %>').classList.toggle('hidden');">
                                Mostrar/Ocultar Enlaces (<%= tema.enlaces.length %>)
                            </button>
                            <div id="enlaces-section-<%= tema.id_tema %>" class="mt-2 hidden">
                                <h3 class="font-semibold text-gray-700 mb-2">Enlaces:</h3>
                                <% if (tema.enlaces && tema.enlaces.length > 0) { %>
                                    <ul class="space-y-2">
                                        <% tema.enlaces.forEach(enlace => { %>
                                            <li class="bg-white p-3 rounded-md shadow-sm">
                                                <div class="flex justify-between items-start">
                                                    <div class="flex flex-col">
                                                        <a href="<%= enlace.URL %>" target="_blank" class="text-sm text-blue-600 hover:underline"><%= enlace.URL %></a>
                                                        <span class="text-xs text-gray-500"><%= enlace.Descripcion %></span>
                                                    </div>
                                                    <div class="flex items-center space-x-2">
                                                        <span class="text-sm font-bold text-indigo-600"><%= enlace.voto_enlace %></span>
                                                        
                                                        <!-- Botón de Voto de Enlace -->
                                                        <button onclick="votarEnlace('<%= tema.id_tema %>', '<%= enlace.id_enlace %>')" class="py-1 px-2 text-white bg-green-500 hover:bg-green-600 rounded-md text-xs font-medium">
                                                            Votar
                                                        </button>
                                                        
                                                        <!-- Boton de edicion de enlace -->
                                                        <button class="py-1 px-2 text-white bg-blue-500 hover:bg-blue-600 rounded-md text-xs font-medium" 
                                                            onclick="document.getElementById('edit-enlace-form-<%= enlace.id_enlace %>').classList.toggle('hidden');">
                                                            Editar
                                                        </button>
                                                        
                                                        <!-- Boton de eliminacion de enlace -->
                                                        <button onclick="eliminarEnlace('<%= tema.id_tema %>', '<%= enlace.id_enlace %>')" class="py-1 px-2 text-white bg-red-500 hover:bg-red-600 rounded-md text-xs font-medium">
                                                            Eliminar
                                                        </button>
                                                    </div>
                                                </div>
                                                <!-- Formulario de Edición de Enlace (con JavaScript) -->
                                                <div id="edit-enlace-form-<%= enlace.id_enlace %>" class="bg-gray-100 p-3 rounded-lg hidden mt-2">

                                                    <form onsubmit="event.preventDefault(); editarEnlace(this, '<%= tema.id_tema %>', '<%= enlace.id_enlace %>');" class="space-y-2">
                                                        <input type="text" name="nueva_url" value="<%= enlace.URL %>" required class="w-full p-2 border rounded-md" placeholder="Nueva URL">
                                                        <textarea name="nueva_descripcion" class="w-full p-2 border rounded-md" placeholder="Nueva descripción"><%= enlace.Descripcion %></textarea>
                                                        <button type="submit" class="w-full py-2 px-4 text-white bg-green-500 hover:bg-green-600 rounded-md text-sm">
                                                            Guardar
                                                        </button>
                                                    </form>
                                                </div>
                                            </li>
                                        <% }); %>
                                    </ul>
                                <% } else { %>
                                    <p class="text-sm text-gray-500">No hay enlaces para este tema. Sé el primero en añadir uno.</p>
                                <% } %>

                                <!-- Formulario para agregar nuevo enlace -->
                                <div class="mt-4 p-4 bg-gray-200 rounded-lg">
                                    <h4 class="font-semibold text-gray-700 mb-2">Agregar Nuevo Enlace</h4>
                                    <form action="/temas/<%= tema.id_tema %>/enlaces" method="POST" class="space-y-2">
                                        <input type="hidden" name="id_tema" value="<%= tema.id_tema %>">
                                        <input type="text" name="url" required class="w-full p-2 border rounded-md" placeholder="URL del Enlace">
                                        <input type="text" name="descripcion" class="w-full p-2 border rounded-md" placeholder="Descripción (opcional)">
                                        <input type="hidden" name="UUID" id="uuid-add-link-<%= tema.id_tema %>">
                                        <button type="submit" class="w-full py-2 px-4 text-white bg-purple-500 hover:bg-purple-600 rounded-md text-sm" onclick="setUUID(this.form, 'uuid-add-link-<%= tema.id_tema %>')">
                                            Añadir Enlace
                                        </button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </li>
                <% }); %>
            </ul>
        <% } else { %>
            <p class="text-center text-gray-500">No hay temas para mostrar.</p>
        <% } %>
    </div>
    <script> 

        // Función para obtener el UUID  y validar y añadir el UUID a los formularios de votación
        function getUUID() {
            const uuidInput = document.getElementById('voter_uuid'); // Input del UUID para votar
            const errorMessage = document.getElementById('uuid-error-message'); // Mensaje de error 
            if (!uuidInput.value) {
                errorMessage.classList.remove('hidden'); // 
                return null; // Retorna null si no hay UUID
            }
            errorMessage.classList.add('hidden'); // Oculta el mensaje de error si hay UUID
            return uuidInput.value; // Retorna el UUID
        }

    // Función para setear el UUID en el formulario de agregar enlace
    function setUUID(form) { // Recibe el formulario como parametro
        const uuid = getUUID(); // Obtiene el UUID
        if (uuid) {
            const uuidInput = form.querySelector('input[name="UUID"]'); // Busca el input oculto del UUID en el formulario
            if (uuidInput) {
                uuidInput.value = uuid;
                return true;
            }
        }
        return false;
    }

    // FUNCIONES PARA MANEJAR LAS PETICIONES HTTP CON FETCH

    // Funcion para votar temas
    async function votarTema(id) { // Recibe el ID del tema a votar
        const uuid = getUUID(); // Obtiene el UUID
        if(!uuid) return; // Si no hay UUID, sale de la funcion

        try {
            const response = await fetch(`/temas/${id}/votos`, { // Hace la peticion fetch
                method:'PUT',
                headers: { 'Content-Type': 'application/json' }, // Tipo de contenido
                body: JSON.stringify({ UUID: uuid})  // Cuerpo de la peticion con el UUID
            });
            if (response.ok) {
                window.location.reload(); // Recarga la pagina si la peticion fue exitosa
            } else {
                const error = await response.json(); // Si hubo un error, obtiene el mensaje de error
                alert('Error al votar el tema: ' + (error.message || 'Error desconocido'));
            }
        } catch (err) {
            alert('Error de red o del servidor.'); // Manejo de errores de red
        }
    }

    // Funcion para eliminar un tema
    async function eliminarTema(id) {
        if (confirm('¿Estas seguro que quieres eliminar este tema?')) {
            try {
                const response = await fetch(`/temas/${id}`, {method: 'DELETE'});
                if (response.ok) {
                    window.location.reload()
                } else {
                    alert('Error al eliminar el tema.')
                }
            } catch (err) {
                alert('Error de red o del servidor.');
            }
        } 
    }

    // Funcion para Editar un tema
    async function editarTema(form, id) {
        const nuevoTitulo = form.nuevo_titulo.value;
        
        try {
            const response = await fetch(`/temas/${id}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ nuevo_titulo: nuevoTitulo })
            });
            if (response.ok) {
                window.location.reload();
            } else {
                const error = await response.json();
                alert('Error al editar el tema: ' + (error.message || 'Error desconocido'));
            }
        } catch (err) {
            alert('Error de red o del servidor.');
        }
    }

    // Funcion para votar enlace
    async function votarEnlace(temaId, enlaceId) {
        const uuid = getUUID();
        if (!uuid) return;

        try {
            const response = await fetch(`/temas/${temaId}/enlaces/${enlaceId}/votos`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ UUID: uuid })
            });
            if (response.ok) {
                window.location.reload();
            } else {
                const error = await response.json();
                alert('Error al votar el enlace: ' + (error.message || 'Error desconocido'));
            }
        } catch (err) {
            alert('Error de red o del servidor.');
        }
    }

    // Funcion eliminar enlace
    async function eliminarEnlace(temaId, enlaceId) {
        if (confirm('¿Estás seguro de que quieres eliminar este enlace?')) {
            try {
                const response = await fetch(`/temas/${temaId}/enlaces/${enlaceId}`, { method: 'DELETE' });
                if (response.ok) {
                    window.location.reload();
                } else {
                    alert('Error al eliminar el enlace.');
                }
            } catch (err) {
                alert('Error de red o del servidor.');
            }
        }
    }

    // Funcion para Editar enlace
    async function editarEnlace(form, temaId, enlaceId) {
        const nueva_url = form.nueva_url.value;
        const nueva_descripcion = form.nueva_descripcion.value;
        try {
            const response = await fetch(`/temas/${temaId}/enlaces/${enlaceId}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ nueva_url, nueva_descripcion })
            });
            if (response.ok) {
                window.location.reload();
            } else {
                const error = await response.json();
                alert('Error al editar el enlace: ' + (error.message || 'Error desconocido'));
            }
        } catch (err) {
            alert('Error de red o del servidor.');
        }
    }
    </script>
</body>
</html>
